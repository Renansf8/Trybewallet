{"version":3,"sources":["images/wallet3.png","actions/index.js","pages/Login.js","components/ButtonForm.js","components/Form.js","headTable.js","components/ExpensesTable.js","pages/Wallet.js","App.js","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","END_POINT","Login","state","email","password","disabled","handleChange","bind","formCheck","saveEmail","target","name","value","this","setState","test","length","changeEmail","props","className","src","logo","alt","type","data-testid","onChange","placeholder","to","onClick","React","Component","connect","dispatch","payload","ButtonForm","Form","description","currency","method","tag","submitExpense","resetState","getDataFromAPI","exchangeRates","form","document","getElementById","addButton","classList","add","remove","currencies","id","htmlFor","Object","keys","map","curr","index","key","wallet","data","fetch","then","response","json","result","USDT","catch","error","requestApiError","results","console","log","exchangeSuccess","exchangeError","headTable","ExpensesTable","expenses","deleteExp","head","item","replace","Number","ask","toFixed","deleteExpense","Wallet","sumTotalExpense","reduce","acc","user","App","exact","path","component","Boolean","window","location","hostname","match","INITIAL_STATE","usersReducer","action","isFetching","walletReducer","filter","exp","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4d9c860e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wallet3.ed450dd4.png\";","// Coloque aqui suas actions\nexport const ADD_EMAIL = 'ADD_EMAIL';\nexport const REQUEST_API = 'REQUEST_API';\nexport const REQUEST_API_SUCCESS = 'REQUEST_API_SUCCESS';\nexport const REQUEST_API_ERROR = 'REQUEST_API_ERROR';\nexport const EXCHANGE_API_SUCCESS = 'EXCHANGE_API_SUCCESS';\nexport const EXCHANGE_API_ERROR = 'EXCHANGE_API_ERROR';\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\n\nexport const saveEmail = (value) => ({\n  type: ADD_EMAIL, payload: value,\n});\n\nexport const requestApi = () => ({\n  type: REQUEST_API,\n});\n\nexport const requestApiSuccess = (value) => ({\n  type: REQUEST_API_SUCCESS, payload: value,\n});\n\nexport const requestApiError = (error) => ({\n  type: REQUEST_API_ERROR, payload: error,\n});\n\nexport const exchangeError = (error) => ({\n  type: EXCHANGE_API_ERROR, error,\n});\n\nexport const exchangeSuccess = (state) => ({\n  type: EXCHANGE_API_SUCCESS, state,\n});\n\nexport const deleteExpense = (id) => ({\n  type: DELETE_EXPENSE, id,\n});\n\nconst END_POINT = 'https://economia.awesomeapi.com.br/json/all';\n\nexport const fetchApi = () => (dispatch) => {\n  dispatch(requestApi());\n  return fetch(END_POINT)\n    .then((response) => response.json())\n    .then((result) => {\n      delete result.USDT;\n      dispatch(requestApiSuccess(result));\n    })\n    .catch((error) => dispatch(requestApiError(error)));\n};\n\nexport const fetchApiExchange = (state) => (dispatch) => fetch(END_POINT)\n  .then((response) => response.json())\n  .then((results) => {\n    console.log(results);\n    dispatch(exchangeSuccess({ ...state, exchangeRates: results }));\n  })\n  .then((error) => dispatch(exchangeError(error)));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { saveEmail } from '../actions';\nimport logo from '../images/wallet3.png';\nimport './login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      password: '',\n      disabled: true,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.formCheck = this.formCheck.bind(this);\n    this.saveEmail = this.saveEmail.bind(this);\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    });\n    this.formCheck();\n  }\n\n  formCheck() {\n    const { email, password } = this.state;\n    const minLength = 5;\n    const checkEmail = /(.*)@(.*).com/; // Regex tirado do slack e fornecido por Mikaela Braga - Turma 12\n    if (checkEmail.test(email) && password.length >= minLength) {\n      this.setState({ disabled: false });\n    } else {\n      this.setState({ disabled: true });\n    }\n  }\n\n  saveEmail() {\n    const { changeEmail } = this.props;\n    const { email } = this.state;\n    changeEmail(email);\n  }\n\n  render() {\n    const { email, password, disabled } = this.state;\n    return (\n      <div className=\"login-container\">\n        <form>\n          <div className=\"title-container\">\n            <h3>TrybeWallet</h3>\n            <img\n              className=\"wallet-logo\"\n              // src=\"https://c.tenor.com/owdY3LF7G9gAAAAj/wallet-attention.gif\"\n              src={ logo }\n              alt=\"wallet\"\n            />\n          </div>\n          <input\n            type=\"email\"\n            name=\"email\"\n            data-testid=\"email-input\"\n            value={ email }\n            onChange={ this.handleChange }\n            placeholder=\"e-mail\"\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            data-testid=\"password-input\"\n            value={ password }\n            onChange={ this.handleChange }\n            placeholder=\"senha\"\n          />\n          <Link to=\"/carteira\">\n            <button\n              onClick={ () => this.saveEmail() }\n              disabled={ disabled }\n              type=\"button\"\n            >\n              Entrar\n            </button>\n          </Link>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeEmail: (value) => dispatch(saveEmail(value)),\n});\n\nLogin.propTypes = {\n  changeEmail: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './buttonForm.css';\n\nclass ButtonForm extends Component {\n  render() {\n    const { onClick } = this.props;\n\n    return (\n      <button\n        className=\"buttonForm\"\n        type=\"button\"\n        onClick={ onClick }\n      >\n        Adicionar despesa\n\n      </button>\n    );\n  }\n}\n\nButtonForm.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ButtonForm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchApi, fetchApiExchange } from '../actions';\nimport ButtonForm from './ButtonForm';\nimport './form.css';\n\nclass Form extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.submitExpense = this.submitExpense.bind(this);\n    this.resetState = this.resetState.bind(this);\n  }\n\n  componentDidMount() {\n    const { getDataFromAPI } = this.props;\n    getDataFromAPI();\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  submitExpense() {\n    const { exchangeRates } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    exchangeRates({ value, description, currency, method, tag });\n    const form = document.getElementById('form');\n    const addButton = document.getElementById('add-button');\n    form.classList.add('form-container');\n    addButton.classList.remove(\"add-button-none\");\n    addButton.classList.add(\"add-button\");\n  }\n\n  onClick() {\n    const form = document.getElementById('form');\n    const addButton = document.getElementById('add-button');\n    form.classList.remove('form-container');\n    form.classList.add('form-container-visible');\n    addButton.classList.remove(\"add-button\")\n    addButton.classList.add(\"add-button-none\");\n  }\n\n  resetState() {\n    this.setState({\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    });\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const {value, description, currency, tag, method } = this.state;\n    return (\n      <div>\n        <div id=\"form\" className=\"form-container\">\n          <form>\n            <label htmlFor=\"value\">\n              Valor\n              <input\n                id=\"value\"\n                name=\"value\"\n                type=\"number\"\n                onChange={ this.handleChange } \n                value={ value }\n                />\n            </label>\n            <label htmlFor=\"description\">\n              Descrição\n              <input\n                id=\"description\"\n                name=\"description\"\n                type=\"text\"\n                onChange={ this.handleChange }\n                value={ description }\n                />\n            </label>\n            <label htmlFor=\"currency\">\n              Moeda\n              <select id=\"currency\" name=\"currency\" onChange={ this.handleChange } value={ currency }>\n                {Object.keys(currencies).map(\n                  (curr, index) => (<option key={ index } value={ curr }>{curr}</option>),\n                  )}\n              </select>\n            </label>\n            <label htmlFor=\"method\">\n              Método de pagamento\n              <select id=\"method\" name=\"method\" onChange={ this.handleChange } value={ method }>\n                <option>Dinheiro</option>\n                <option>Cartão de crédito</option>\n                <option>Cartão de débito</option>\n              </select>\n            </label>\n            <label htmlFor=\"category\">\n              Tag\n              <select id=\"category\" name=\"tag\" onChange={ this.handleChange } value={ tag }>\n                <option>Alimentação</option>\n                <option>Lazer</option>\n                <option>Trabalho</option>\n                <option>Transporte</option>\n                <option>Saúde</option>\n              </select>\n            </label>\n            <ButtonForm \n              onClick={ () => {\n                this.submitExpense();\n                this.resetState(); \n              } }\n            />\n          </form>\n        </div>\n        <button\n         onClick={() => this.onClick() } \n         type='button'\n         id=\"add-button\"\n         className=\"add-button\"\n         >\n          Adicionar despesa\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getDataFromAPI: (data) => dispatch(fetchApi(data)),\n  exchangeRates: (data) => dispatch(fetchApiExchange(data)),\n});\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n});\n\nForm.propTypes = {\n  getDataFromAPI: PropTypes.func.isRequired,\n  currencies: PropTypes.objectOf(PropTypes.object).isRequired,\n  exchangeRates: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","const headTable = [\n  'Descrição',\n  'Tag',\n  'Método de pagamento',\n  'Valor',\n  'Moeda',\n  'Câmbio utilizado',\n  'Valor convertido',\n  'Moeda de conversão',\n  'Excluir',\n];\n\nexport default headTable;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { MdDelete } from 'react-icons/md';\nimport { deleteExpense } from '../actions';\nimport headTable from '../headTable';\nimport './expensesTable.css';\n\nclass ExpensesTable extends Component {\n  render() {\n    const { expenses, deleteExp } = this.props;\n\n    return (\n      <table className=\"expenses-table\">\n        <thead>\n          <tr>\n            {headTable.map((head, index) => <th key={ index }>{head}</th>)}\n          </tr>\n        </thead>\n        <tbody>\n          {expenses.map((item) => (\n            <tr key={ item.id }>\n              <td><span className=\"desc-minwitdh\">Descrição:</span>{item.description}</td>\n              <td><span className=\"desc-minwitdh\">Tag:</span>{item.tag}</td>\n              <td><span className=\"desc-minwitdh\">Método de pagamento:</span>{item.method}</td>\n              <td><span className=\"desc-minwitdh\">Valor:</span>{item.value}</td>\n              <td><span className=\"desc-minwitdh\">Moeda:</span>\n                {(item.exchangeRates[item.currency].name)\n                  .replace('/Real Brasileiro', '')}\n              </td>\n              <td><span className=\"desc-minwitdh\">Câmbio utilizado:</span>{Number(item.exchangeRates[item.currency].ask).toFixed(2)}</td>\n              <td><span className=\"desc-minwitdh\">Valor convertido:</span>\n                {(Number(item.value) * Number(item.exchangeRates[item.currency].ask))\n                  .toFixed(2)}\n              </td>\n              <td><span className=\"desc-minwitdh\">Moeda de conversão:</span>Real</td>\n              <td><span className=\"desc-minwitdh\">Excluir:</span>\n                <button\n                  onClick={ () => deleteExp(item.id) }\n                  data-testid=\"delete-btn\"\n                  type=\"button\"\n                >\n                  <MdDelete />\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteExp: (id) => dispatch(deleteExpense(id)),\n});\n\nExpensesTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteExp: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Form from '../components/Form';\nimport ExpensesTable from '../components/ExpensesTable';\nimport logo from '../images/wallet3.png';\nimport './wallet.css';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n\n    this.sumTotalExpense = this.sumTotalExpense.bind(this);\n  }\n\n  sumTotalExpense() {\n    const { expenses } = this.props;\n    if (!expenses.length) return '0,00';\n    const total = expenses\n      .map(({ value, exchangeRates, currency }) => exchangeRates[currency].ask * value)\n      .reduce((acc, curr) => acc + curr, 0);\n    return total.toFixed(2);\n  }\n\n  render() {\n    const { email } = this.props;\n\n    return (\n      <div>\n        <header>\n          <div className=\"logo\">\n            TrybeWallet\n            <img src={ logo } alt=\"wallet\" />\n          </div>\n          <div className=\"user-info\">\n            <p data-testid=\"email-field\" className=\"user-email\">\n              Email:\n              <span className=\"email\">{email}</span>\n            </p>\n            <p data-testid=\"total-field\" className=\"total-field\">\n              Despesa Total:\n              <span className=\"total-sum\">{this.sumTotalExpense()} BRL</span>\n            </p>\n          </div>\n        </header>\n        <Form />\n        <ExpensesTable />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nWallet.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps, null)(Wallet);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route exact path=\"/carteira\" component={ Wallet } />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { ADD_EMAIL } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst usersReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case ADD_EMAIL:\n    return { ...state, email: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default usersReducer;\n","import {\n  REQUEST_API,\n  REQUEST_API_SUCCESS,\n  REQUEST_API_ERROR,\n  EXCHANGE_API_SUCCESS,\n  EXCHANGE_API_ERROR,\n  DELETE_EXPENSE,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  isFetching: false,\n  error: '',\n};\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_API:\n    return {\n      ...state,\n      isFetching: true,\n    };\n  case REQUEST_API_SUCCESS:\n    return {\n      ...state,\n      currencies: action.payload,\n      isFetching: false,\n    };\n  case REQUEST_API_ERROR:\n    return {\n      ...state,\n      error: action.payload,\n      isFetching: false,\n    };\n  case EXCHANGE_API_SUCCESS:\n    return {\n      ...state,\n      expenses: [\n        ...state.expenses, { id: state.expenses.length, ...action.state },\n      ],\n    };\n  case EXCHANGE_API_ERROR:\n    return {\n      ...state,\n      error: action.error,\n    };\n  case DELETE_EXPENSE:\n    return {\n      ...state,\n      expenses: state.expenses.filter((exp) => exp.id !== action.id),\n    };\n  default:\n    return state;\n  }\n};\n\nexport default walletReducer;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({ user, wallet });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}